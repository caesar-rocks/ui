package ui

type SelectFieldOption struct {
	Value    string
	Label    string
	Selected bool
}

type SelectFieldProps struct {
	Label       string
	LabelRight  func() templ.Component
	DivClass    string
	Id          string
	Error       string
	Options     []SelectFieldOption
	Placeholder string
	Readonly    bool
	Required    bool
	Value       string
}

templ SelectField(props SelectFieldProps) {
	<div class={ props.DivClass }>
		if props.Label != "" {
			@Label(LabelProps{
				Id:         props.Id,
				Label:      props.Label,
				LabelRight: props.LabelRight,
			})
		}
		<div class="mt-1 flex w-full">
			<select
				class="flex h-10 w-full rounded-md border border-zinc-300 px-2 text-sm focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-400 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
				readonly?={ props.Readonly }
				required?={ props.Required }
				id={ props.Id }
				name={ props.Id }
				placeholder={ props.Placeholder }
			>
				for _, option := range props.Options {
					<option
						value={ option.Value }
						selected?={ option.Selected }
					>
						{ option.Label }
					</option>
				}
			</select>
			{ children... }
		</div>
		if props.Error != "" {
			<p class="text-sm text-red-500 mt-1">{ props.Error }</p>
		}
	</div>
}
